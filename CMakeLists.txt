
cmake_minimum_required(VERSION 2.8)

project(NetSurf)

include(GNUInstallDirs)
include(ExternalProject)

if(NOT NETSURF_PREFIX)
	set(NETSURF_PREFIX "/opt/netsurf")
endif()

if(NOT EXTERNAL_PROJECTS_BASE)
	set(EXTERNAL_PROJECTS_BASE "${CMAKE_BINARY_DIR}/external")
	set_property(DIRECTORY PROPERTY "EP_BASE" ${EXTERNAL_PROJECTS_BASE})
endif()

set(PKG_CONFIG_PATH "${NETSURF_PREFIX}/lib/pkgconfig")
set(EXTERNAL_PROJECTS_CONFIGURE_EXTRA "PKG_CONFIG_PATH=${PKG_CONFIG_PATH}")

set(EXTERNAL_PROJECT "buildsystem")
set(${EXTERNAL_PROJECT}_GIT_REPOSITORY "git://git.netsurf-browser.org/buildsystem")
set(${EXTERNAL_PROJECT}_MAKE "PREFIX=${NETSURF_PREFIX};PKG_CONFIG_PATH=${PKG_CONFIG_PATH}")
set(${EXTERNAL_PROJECT}_DEPENDS "")
list(APPEND EXTERNAL_PROJECTS ${EXTERNAL_PROJECT})

set(EXTERNAL_PROJECT "libwapcaplet")
set(${EXTERNAL_PROJECT}_GIT_REPOSITORY "git://git.netsurf-browser.org/libwapcaplet")
set(${EXTERNAL_PROJECT}_MAKE "PREFIX=${NETSURF_PREFIX};PKG_CONFIG_PATH=${PKG_CONFIG_PATH}")
set(${EXTERNAL_PROJECT}_DEPENDS "")
list(APPEND EXTERNAL_PROJECTS ${EXTERNAL_PROJECT})

set(EXTERNAL_PROJECT "libparserutils")
set(${EXTERNAL_PROJECT}_GIT_REPOSITORY "git://git.netsurf-browser.org/libparserutils")
set(${EXTERNAL_PROJECT}_MAKE "PREFIX=${NETSURF_PREFIX};PKG_CONFIG_PATH=${PKG_CONFIG_PATH}")
set(${EXTERNAL_PROJECT}_DEPENDS "")
list(APPEND EXTERNAL_PROJECTS ${EXTERNAL_PROJECT})

set(EXTERNAL_PROJECT "libhubbub")
set(${EXTERNAL_PROJECT}_GIT_REPOSITORY "git://git.netsurf-browser.org/libhubbub")
set(${EXTERNAL_PROJECT}_MAKE "PREFIX=${NETSURF_PREFIX};PKG_CONFIG_PATH=${PKG_CONFIG_PATH}")
set(${EXTERNAL_PROJECT}_DEPENDS "")
list(APPEND EXTERNAL_PROJECTS ${EXTERNAL_PROJECT})

set(EXTERNAL_PROJECT "libcss")
set(${EXTERNAL_PROJECT}_GIT_REPOSITORY "git://git.netsurf-browser.org/libcss")
set(${EXTERNAL_PROJECT}_MAKE "PREFIX=${NETSURF_PREFIX};PKG_CONFIG_PATH=${PKG_CONFIG_PATH}")
set(${EXTERNAL_PROJECT}_DEPENDS "libwapcaplet;libparserutils")
list(APPEND EXTERNAL_PROJECTS ${EXTERNAL_PROJECT})

set(EXTERNAL_PROJECT "libdom")
set(${EXTERNAL_PROJECT}_GIT_REPOSITORY "git://git.netsurf-browser.org/libdom")
set(${EXTERNAL_PROJECT}_MAKE "PREFIX=${NETSURF_PREFIX};PKG_CONFIG_PATH=${PKG_CONFIG_PATH}")
set(${EXTERNAL_PROJECT}_DEPENDS "libhubbub")
list(APPEND EXTERNAL_PROJECTS ${EXTERNAL_PROJECT})

set(EXTERNAL_PROJECT "libnsbmp")
set(${EXTERNAL_PROJECT}_GIT_REPOSITORY "git://git.netsurf-browser.org/libnsbmp")
set(${EXTERNAL_PROJECT}_MAKE "PREFIX=${NETSURF_PREFIX};PKG_CONFIG_PATH=${PKG_CONFIG_PATH}")
set(${EXTERNAL_PROJECT}_DEPENDS "")
list(APPEND EXTERNAL_PROJECTS ${EXTERNAL_PROJECT})

set(EXTERNAL_PROJECT "libnsgif")
set(${EXTERNAL_PROJECT}_GIT_REPOSITORY "git://git.netsurf-browser.org/libnsgif")
set(${EXTERNAL_PROJECT}_MAKE "PREFIX=${NETSURF_PREFIX};PKG_CONFIG_PATH=${PKG_CONFIG_PATH}")
set(${EXTERNAL_PROJECT}_DEPENDS "")
list(APPEND EXTERNAL_PROJECTS ${EXTERNAL_PROJECT})

set(EXTERNAL_PROJECT "libnsfb")
#set(${EXTERNAL_PROJECT}_GIT_REPOSITORY "git://git.netsurf-browser.org/libnsfb")
set(${EXTERNAL_PROJECT}_GIT_REPOSITORY "git@github.com:awakecoding/libnsfb.git")
set(${EXTERNAL_PROJECT}_MAKE "PREFIX=${NETSURF_PREFIX};PKG_CONFIG_PATH=${PKG_CONFIG_PATH}")
set(${EXTERNAL_PROJECT}_DEPENDS "")
list(APPEND EXTERNAL_PROJECTS ${EXTERNAL_PROJECT})

set(EXTERNAL_PROJECT "netsurf")
set(${EXTERNAL_PROJECT}_VERSION "3.0")
set(${EXTERNAL_PROJECT}_NAME "${EXTERNAL_PROJECT}-${${EXTERNAL_PROJECT}_VERSION}-src")
set(${EXTERNAL_PROJECT}_EXT ".tar.gz")
set(${EXTERNAL_PROJECT}_FILE "${${EXTERNAL_PROJECT}_NAME}${${EXTERNAL_PROJECT}_EXT}")
set(${EXTERNAL_PROJECT}_URL "http://download.netsurf-browser.org/netsurf/releases/source/${${EXTERNAL_PROJECT}_FILE}")
set(${EXTERNAL_PROJECT}_MAKE "TARGET=framebuffer;PREFIX=${NETSURF_PREFIX};PKG_CONFIG_PATH=${PKG_CONFIG_PATH}")
set(${EXTERNAL_PROJECT}_DEPENDS "buildsystem;libwapcaplet;libparserutils;libhubbub;libcss;libdom;libnsbmp;libnsgif;libnsfb")
list(APPEND EXTERNAL_PROJECTS ${EXTERNAL_PROJECT})

foreach(EXTERNAL_PROJECT ${EXTERNAL_PROJECTS})
	message(STATUS "Adding External Project: ${EXTERNAL_PROJECT}")
	
	ExternalProject_Add(${EXTERNAL_PROJECT}
		URL "${${EXTERNAL_PROJECT}_URL}"
		GIT_REPOSITORY "${${EXTERNAL_PROJECT}_GIT_REPOSITORY}"
		CONFIGURE_COMMAND ""
		BUILD_COMMAND "make" ${${EXTERNAL_PROJECT}_MAKE}
		INSTALL_COMMAND "make" install ${${EXTERNAL_PROJECT}_MAKE}
		DEPENDS ${${EXTERNAL_PROJECT}_DEPENDS}
		BUILD_IN_SOURCE 1
		LOG_BUILD 1
		LOG_INSTALL 1)
endforeach()

configure_file(${CMAKE_CURRENT_SOURCE_DIR}/Makefile.defaults.in ${CMAKE_CURRENT_SOURCE_DIR}/Makefile.defaults)

ExternalProject_Add_Step("netsurf" NETSURF_MAKEFILE_DEFAULTS
	COMMAND cp -fr ${CMAKE_CURRENT_SOURCE_DIR}/Makefile.defaults ${EXTERNAL_PROJECTS_BASE}/Source/netsurf/Makefile.defaults
	DEPENDEES patch
	DEPENDERS configure)

set(MAKE_ALL "make")

foreach(EXTERNAL_PROJECT ${EXTERNAL_PROJECTS})
	set(MAKE_ALL "${MAKE_ALL} ${EXTERNAL_PROJECT}")
endforeach()

message(STATUS "${MAKE_ALL}")

